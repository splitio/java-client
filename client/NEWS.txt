NEWS

2.3.0
- Add support for .track() to provide the ability to start tracking events  for example: exception counts, checkout values, etc

2.1.0
- Add support for new boolean and regular expression matchers
- Add support for new Dependency matcher

2.0.2
- Attributes are sent to local impression listeners
- Add support for new set of String and set matchers

2.0.1
- Added the ability to support TLS2

2.0.0
- The internal hashing algorithm is now murmur3 and still honors legacy algorithm for existing splits.

1.1.7
- This release gives the ability to specify a percentage of traffic that will not be in a Split.
- In addition, we now provide the ability to provide your own ImpressionListener.

1.1.6
- Removing deprecated SplitClientBuilder

1.1.5
- Introducing SplitClientForTest and SplitTestRunner for JUnit. More information at split.io/blog/feature-flag-testing

1.0.10
- No news for this update

1.0.9
- Introduced new API: getTreatment(Key key, String feature, Map attributes);
- Deprecated SplitClientBuilder. Clients are expected to use SplitFactoryBuilder instead.

1.0.8
 No news for this update.

1.0.7
- New Factory builder creates a factory who creates a client or manager
    SplitFactoryBuilder.build(apiKey, config).client();

1.0.6-wip1
- Dropped SplitClientConfig#eventsEndpoint
- Modified SplitClientConfig#endpoint to take in both sdk and events api.
     .endpoint("endpoint for split changes", "endpoint for impressions")

1.0.4
- Api adds blockUntilReady(..) to wait for start up completion before proceeding.
- Metrics and Impressions are now send to another endpoint: events.split.io

1.0.3
- no news for this release.

1.0.1
- It's backwards compatible with previous version
  add an overloaded method to allow passing a map of attributes to getTreatment call for attribute based matching

1.0.0

- No news for this release

